// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Period {
  MONTHLY
  YEARLY
  WEEKLY
}

enum Frequency {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

model User {
  id            Int               @id @default(autoincrement())
  email         String            @unique
  password      String
  expenses      Expense[]
  budgets       Budget[]
  recurringExpenses RecurringExpense[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model Expense {
  id          Int       @id @default(autoincrement())
  amount      Float
  description String?
  date        DateTime
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  tags        Tag[]     @relation("ExpenseTags")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id        Int               @id @default(autoincrement())
  name      String            @unique
  description String?
  expenses  Expense[]
  budgets   Budget[]
  recurringExpenses RecurringExpense[]
}

model Budget {
  id         Int       @id @default(autoincrement())
  amount     Float
  period     Period
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  expenses Expense[] @relation("ExpenseTags")
}

model RecurringExpense {
  id          Int       @id @default(autoincrement())
  amount      Float
  description String?
  frequency   Frequency
  nextDueDate DateTime
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
